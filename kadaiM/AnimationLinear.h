//=============================================================================
//
// シーン遷移処理 [AnimationLinear.h]
// Author : MASAHIRO YAMAGUCHI
//
//=============================================================================

//=============================================================
// AnimationLinear.h
// 線形補間によるキーフレームアニメーションクラスの定義
//=============================================================

#ifndef _ANIMATIONLINEAR_H_
#define _ANIMATIONLINEAR_H_

#include <windows.h>

//=============================================================
// AnimationLinear
// 線形補間によるキーフレームアニメーションクラス
//=============================================================
class AnimationLinear
{
public:
	//---------------------------------------------------------
	// デフォルトコンストラクタ
	//---------------------------------------------------------
	AnimationLinear();

	//---------------------------------------------------------
	// デストラクタ
	//---------------------------------------------------------
	~AnimationLinear();

	//---------------------------------------------------------
	// キーの生成
	// 引数
	//		numKey : キーの数
	//---------------------------------------------------------
	void CreateKey(int numKey);
	
	//---------------------------------------------------------
	// キーとキーに対応する値の設定
	// キーは小さい方から順番に設定すること
	// 2度目以降同じインデックスを使用した場合は上書きされる
	// 引数
	//		index : インデックス, 0 <= index < createKeyで生成したキーの数
	//		key   : キー, 0.0f <= key <= 1.0f
	//		value : キーに対応する値
	//---------------------------------------------------------
	void SetKeyValue(int index, float key, float value);

	//---------------------------------------------------------
	// アニメーションの長さ(キーが0から1まで変化するのにかかる時間)の設定
	// 引数
	//		duration : 時間(ミリ秒)
	//---------------------------------------------------------
	void SetDuration(DWORD duration);

	//---------------------------------------------------------
	// アニメーションをループするかどうかの設定
	// 引数
	//		isLoop : TRUEならループする, FALSEならループしない
	//---------------------------------------------------------
	void SetLoopFlag(DWORD isLoop);

	//---------------------------------------------------------
	// アニメーション開始時刻の設定
	// 引数
	//		start : アニメーションの開始時刻(ミリ秒)
	//---------------------------------------------------------
	void SetStartTime(DWORD start);

	//---------------------------------------------------------
	// 時刻に対応する値を取得する
	// 引数
	//		time   : 時刻(ミリ秒)
	//		pValue : 結果を受け取る変数へのポインタ
	//		pIsEnd : アニメーション終了判定フラグを受け取る変数へのポインタ, 終了していたらTRUEそうれなければFALSE
	// 戻り値
	//		値の取得に成功したらTRUE, 失敗したらFALSE
	//---------------------------------------------------------
	BOOL GetValue(DWORD time, float* pValue, BOOL* pIsEnd);

protected:
	//---------------------------------------------------------
	// 時刻を割合に変換する
	// 引数
	//		time : 時刻(ミリ秒)
	// 戻り値
	//		割合
	//---------------------------------------------------------
	float GetFraction(DWORD time);

	//---------------------------------------------------------
	// 割合に対応するインデックスを取得する
	// 引数
	//		fraction : 割合
	// 戻り値
	//		配列のインデックス, fractionが登録されているキーより小さければ-1
	//---------------------------------------------------------
	int GetBeginIndex(float fraction);

private:
	int		m_numKey;		// キーの数
	float*	m_keys;			// キーを格納する配列へのポインタ
	float*	m_values;		// キーに対応する値を格納する配列へのポインタ
	BOOL	m_isLoop;		// アニメーションをループするかどうかのフラグ
	DWORD	m_startTime;	// アニメーションの開始時刻
	DWORD	m_duration;		// アニメーションの長さ
};

#endif //_AnimationLinear_h_