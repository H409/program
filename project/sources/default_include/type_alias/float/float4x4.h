//*****************************************************************************
//
// float4x4
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// include gaurd
//*****************************************************************************
#pragma once
#ifndef _FLOAT4x4_H_
#define _FLOAT4x4_H_

//*****************************************************************************
// include
//*****************************************************************************
#include "float4.h"

//*****************************************************************************
// structure definition
//*****************************************************************************
struct float4x4
{
public:
	union
	{
		struct
		{
			f32 _11;	f32 _12;	f32 _13;	f32 _14;
			f32 _21;	f32 _22;	f32 _23;	f32 _24;
			f32 _31;	f32 _32;	f32 _33;	f32 _34;
			f32 _41;	f32 _42;	f32 _43;	f32 _44;
		};
		struct
		{
			float4 _m[4];
		};
	};

	// constructor
	float4x4(void);
	float4x4(const float4x4& in_float4x4);

	// operator
	float4x4 operator+(void)const;
	float4x4 operator-(void)const;
	float4x4 operator*(const f32& value)const;
	float4x4 operator/(const f32& value)const;
	void operator*=(const f32& value);
	void operator/=(const f32& value);

};

#endif// _FLOAT4x4_H_

//---------------------------------- EOF --------------------------------------
