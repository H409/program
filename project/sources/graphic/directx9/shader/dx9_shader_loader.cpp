//*****************************************************************************
//
// directx9 shader loader
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// include
//*****************************************************************************
#include "dx9_shader_loader.h"
#include "dx9_shader.h"

namespace graphic
{
namespace directx9
{
namespace shader
{
//*****************************************************************************
// constant definition
//*****************************************************************************

//=============================================================================
// constructor
//=============================================================================
DX9ShaderLoader::DX9ShaderLoader(LPDIRECT3DDEVICE9 direct3ddevice9)
	:direct3ddevice9_(direct3ddevice9)
{
}

//=============================================================================
// destructor
//=============================================================================
DX9ShaderLoader::~DX9ShaderLoader(void)
{
}

//=============================================================================
// create
//=============================================================================
base::shader::BaseShader* DX9ShaderLoader::Create(const std::string& key)
{
	auto shader = new DX9Shader(direct3ddevice9_,key);

	DEBUG_ASSERT(shader != nullptr);

	return shader;
}

} // namespace texture
} // namespace directx9
} // namespace graphic

//---------------------------------- EOF --------------------------------------
