//-----------------------------------------------------------------------------
//
// 木処理 : fbx_tree.cpp
// Author : sembon takanori
//
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------
// インクルード
//------------------------------------------------------------------------
#include "../system/win_system.h"
#include "fbx_tree.h"

//------------------------------------------------------------------------
// マクロ定義
//------------------------------------------------------------------------

//------------------------------------------------------------------------
// 構造体
//------------------------------------------------------------------------

//------------------------------------------------------------------------
// プロトタイプ宣言
//------------------------------------------------------------------------

//------------------------------------------------------------------------
// 静的メンバ変数
//------------------------------------------------------------------------


//------------------------------------------------------------------------
// グローバル変数
//------------------------------------------------------------------------

//-------------------------------------------------------------------
// 関数名 : コンストラクタ
//
// 引数   : LPDIRECT3DDEVICE9 pDevice : デバイス
//-------------------------------------------------------------------
FBXTree::FBXTree( LPDIRECT3DDEVICE9 pDevice , int ID ) : FBXObject( pDevice )
{
	pDevice_ = pDevice ;
	position_ = float3( 0 , 0 , 0 );

	ID_ = ID ;

	switch( ID_ )
	{
		case 0 :
		case 1 :
			Load( "resources/model/ki_r_mo.kim" );
			break ;

		case 2 :
		case 3 :
			Load( "resources/model/ki_b_mo.kim" );
			break ;

		default :
			break ;
	}

}

//-------------------------------------------------------------------
// 関数名 : デストラクタ
//
// 引数   : なし
//-------------------------------------------------------------------
FBXTree::~FBXTree( void )
{
	SafeRelease( pKim_ );
}

//-------------------------------------------------------------------
// 関数名 : 初期化
//
// 引数   : D3DXVECTOR2 pos : 座標
// 引数   : D3DXVECTOR2 size : サイズ
// 返り値 : 成功かどうか
//-------------------------------------------------------------------
void FBXTree::Init( float3 pos )
{
}

//-------------------------------------------------------------------
// 関数名 : 更新
//
// 引数   : なし
// 返り値 : なし
//-------------------------------------------------------------------
void FBXTree::Update( void )
{
	//--  kim更新  --//
	FBXObject::UpdateKimMatrix();
}

//-------------------------------------------------------------------
// 関数名 : 描画
//
// 引数   : なし
// 返り値 : なし
//-------------------------------------------------------------------
void FBXTree::Draw( void )
{
	pKim_->Draw();
}

//-------------------------------------------------------------------
// 関数名 : 終了
//
// 引数   : なし
// 返り値 : なし
//-------------------------------------------------------------------
void FBXTree::Uninit( void )
{
}

// END
