//*****************************************************************************
//
// move by
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// include
//*****************************************************************************
#include "move_by.h"
#include "math/math.h"

namespace action {
//=============================================================================
// 
//=============================================================================
MoveBy::MoveBy(const u32& in_duration,const float3& in_move)
	:Action(in_duration)
	,move_(in_move)
{
}

//=============================================================================
// 
//=============================================================================
MoveBy::MoveBy(const u32 & in_duration,const float3 & in_vector,const f32 & in_length)
	:MoveBy(in_duration,utility::math::Normalize(in_vector) * in_length)
{

}

//=============================================================================
// get reverse
//=============================================================================
MoveBy::TAction MoveBy::GetReverse(void) const
{
	return nullptr;
}

//=============================================================================
// update
//=============================================================================
void MoveBy::Update_(const u32& in_delta_time)
{
	auto rate = static_cast<f32>(time_count_) / static_cast<f32>(duration_);
	position_ = start_position_ + move_ * rate;

}
} // namespace action

//---------------------------------- EOF --------------------------------------
