//*****************************************************************************
//
// line
//
// Author		: Kenji Kabutomori
//
//*****************************************************************************

//*****************************************************************************
// include
//*****************************************************************************
#include "line.h"

namespace common
{
namespace shape
{

//=============================================================================
// constructor
//=============================================================================
Line::Line(void)
	:Shape(TYPE_LINE)
{
}

//=============================================================================
// constructor
//=============================================================================
Line::Line(const float3& in_position,const float3& in_start,const float3& in_end)
	:Shape(TYPE_LINE,in_position)
	,start_(in_start)
	,end_(in_end)
{

}

//=============================================================================
// destructor
//=============================================================================
Line::~Line(void)
{
}

//=============================================================================
// is collide
//=============================================================================
bool Line::IsCollide(const Shape* in_shape)const
{
	return in_shape->IsCollide(this);
}

//=============================================================================
// is collide
//=============================================================================
bool Line::IsCollide(const Line* in_line)const
{
	return false;
}

//=============================================================================
// is collide
//=============================================================================
bool Line::IsCollide(const Sphere* in_sphere)const
{
	return false;
}

} // namespace shape
} // namespace common

//---------------------------------- EOF --------------------------------------
